" Experimental vimrc
" My original vimrc has become very bloated and slow :(
" so I would like to start everything from scratch
" and re-add config and plugins as and when I need them only

if has('vim_starting')
  set nocompatible
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'
" Interactive command execution in Vim
NeoBundle 'Shougo/vimproc.vim', {
      \ 'build' : {
      \     'windows' : 'tools\\update-dll-mingw',
      \     'cygwin' : 'make -f make_cygwin.mak',
      \     'mac' : 'make -f make_mac.mak',
      \     'unix' : 'make -f make_unix.mak',
      \    },
      \ }
" Defaults everyone can agree on
NeoBundle 'tpope/vim-sensible'
" Search and display information from arbitrary sources
" like files, buffers, recently used files or registers
NeoBundle 'Shougo/unite.vim'
" Precision colorscheme for the vim
NeoBundle 'altercation/vim-colors-solarized'

call neobundle#end()

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

" Remap leader key
let mapleader = ","
let g:mapleader = ","

" Hybrid line number mode
set relativenumber
set number

" Change colorscheme
colorscheme solarized
let g:solarized_termcolors=256
set background=dark

" Make Unite to do CtrlP-style search
call unite#custom#profile('default', 'context', {
	\   'start_insert': 1,
	\   'winheight': 10,
	\   'direction': 'botright'
	\ })
call unite#filters#matcher_default#use(['matcher_fuzzy'])
"call unite#filters#sorter_default#use(['sorter_rank'])
"call unite#custom#source('file_rec/async','sorters','sorter_rank')
nnoremap <C-p> :Unite -buffer-name=files file_rec/async<cr>

" move by displayed line instead of physical line
nnoremap j gj
nnoremap k gk
